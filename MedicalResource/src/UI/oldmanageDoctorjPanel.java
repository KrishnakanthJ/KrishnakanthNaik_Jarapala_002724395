/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.City;
import Model.CityDirectory;
import Model.Community;
import Model.CommunityDirectory;
import Model.Doctor;
import Model.DoctorDirectory;
import Model.Hospital;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author Krishnakanth Naik Jarapala
 */
public class oldmanageDoctorjPanel extends javax.swing.JPanel {

    DoctorDirectory doctorlist;
    Doctor doctor;
    DoctorDirectory newdoctorlist;
    CommunityDirectory communitylist;
    CityDirectory citylist;
    
    City chosenCity;
    Community chosenComm;
    
    int error_flag = 0;
    /**
     * Creates new form manageDoctorjPanel
     * @param doctorlist
     */
    public oldmanageDoctorjPanel(CityDirectory citylist, CommunityDirectory communitylist, DoctorDirectory doctorlist) {
        initComponents();
        this.doctorlist = doctorlist;
        this.newdoctorlist = doctorlist;
        this.citylist = citylist;
        this.communitylist = communitylist;
        populateDataToTable();
        populatecity();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTab_manage = new javax.swing.JTabbedPane();
        jtab_add = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        lblnameval = new javax.swing.JLabel();
        lblHA = new javax.swing.JLabel();
        lblHAval = new javax.swing.JLabel();
        lblcomm = new javax.swing.JLabel();
        lblcommval = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblcityval = new javax.swing.JLabel();
        lblUN = new javax.swing.JLabel();
        txtun = new javax.swing.JTextField();
        lblunval = new javax.swing.JLabel();
        lblpwd = new javax.swing.JLabel();
        txtpwd = new javax.swing.JTextField();
        lblpwdval = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        ddhn = new javax.swing.JComboBox<>();
        ddcity = new javax.swing.JComboBox<>();
        ddcom = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();
        txtSearchID = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btn_Save = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lbl_name = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lbl_un = new javax.swing.JLabel();
        lbl_pwd = new javax.swing.JLabel();
        txt_un = new javax.swing.JTextField();
        txt_pwd = new javax.swing.JTextField();
        txtSearchName = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        lbl_pwd1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 204, 204));

        jTab_manage.setBackground(new java.awt.Color(255, 153, 153));
        jTab_manage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTab_manageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTab_manageMouseEntered(evt);
            }
        });

        jtab_add.setBackground(new java.awt.Color(255, 204, 204));
        jtab_add.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 51, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Create New Doctor");
        jtab_add.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 68, 980, -1));

        lblName.setText("Name:");
        jtab_add.add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 240, 88, 23));

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });
        txtname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnameKeyReleased(evt);
            }
        });
        jtab_add.add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 230, 238, -1));

        lblId.setText(" ");
        lblId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblIdKeyReleased(evt);
            }
        });
        jtab_add.add(lblId, new org.netbeans.lib.awtextra.AbsoluteConstraints(631, 26, 238, -1));

        lblnameval.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        lblnameval.setForeground(new java.awt.Color(255, 51, 51));
        lblnameval.setText(" ");
        jtab_add.add(lblnameval, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 230, 420, 30));

        lblHA.setText("Hospital Name");
        jtab_add.add(lblHA, new org.netbeans.lib.awtextra.AbsoluteConstraints(254, 370, 120, -1));

        lblHAval.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        lblHAval.setForeground(new java.awt.Color(255, 51, 51));
        lblHAval.setText(" ");
        jtab_add.add(lblHAval, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 370, 438, 30));

        lblcomm.setText("Community:");
        jtab_add.add(lblcomm, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 320, 100, 30));

        lblcommval.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        lblcommval.setForeground(new java.awt.Color(255, 51, 51));
        lblcommval.setText(" ");
        jtab_add.add(lblcommval, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 320, 438, 30));

        lblCity.setText("City:");
        jtab_add.add(lblCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 280, 88, 31));

        lblcityval.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        lblcityval.setForeground(new java.awt.Color(255, 51, 51));
        lblcityval.setText(" ");
        jtab_add.add(lblcityval, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 270, 430, 30));

        lblUN.setText("User Name:");
        jtab_add.add(lblUN, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 430, 110, 30));

        txtun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtunActionPerformed(evt);
            }
        });
        txtun.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtunKeyReleased(evt);
            }
        });
        jtab_add.add(txtun, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 430, 238, -1));

        lblunval.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        lblunval.setForeground(new java.awt.Color(255, 51, 51));
        lblunval.setText(" ");
        jtab_add.add(lblunval, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 430, 380, 30));

        lblpwd.setText("Password:");
        jtab_add.add(lblpwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 480, 88, 31));

        txtpwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpwdActionPerformed(evt);
            }
        });
        txtpwd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpwdKeyReleased(evt);
            }
        });
        jtab_add.add(txtpwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 480, 238, -1));

        lblpwdval.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        lblpwdval.setForeground(new java.awt.Color(255, 51, 51));
        jtab_add.add(lblpwdval, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 480, 430, 30));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jtab_add.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(485, 595, 110, -1));

        ddhn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddhnActionPerformed(evt);
            }
        });
        jtab_add.add(ddhn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 370, 240, -1));

        ddcity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddcityActionPerformed(evt);
            }
        });
        jtab_add.add(ddcity, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 270, 240, -1));

        ddcom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddcomActionPerformed(evt);
            }
        });
        jtab_add.add(ddcom, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 320, 240, -1));

        jTab_manage.addTab("Add New Doctor", jtab_add);

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Doctor ID", "Name", "Age", "Gender", "Community", "City"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(displayTable);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 119, 1048, 139));

        txtSearchID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchIDActionPerformed(evt);
            }
        });
        txtSearchID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchIDKeyReleased(evt);
            }
        });
        jPanel2.add(txtSearchID, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 176, -1));

        btnUpdate.setText("View & Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel2.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(791, 276, 150, -1));

        btn_Save.setText("Save");
        btn_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SaveActionPerformed(evt);
            }
        });
        jPanel2.add(btn_Save, new org.netbeans.lib.awtextra.AbsoluteConstraints(519, 580, 110, -1));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 276, -1, -1));

        lbl_name.setText("Name:");
        jPanel2.add(lbl_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 360, 111, -1));

        txt_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nameActionPerformed(evt);
            }
        });
        jPanel2.add(txt_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 360, 219, -1));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Manage Doctor Details");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 16, 1062, -1));

        lbl_un.setText("User Name:");
        jPanel2.add(lbl_un, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 410, 111, -1));

        lbl_pwd.setText("Hospital Name:");
        jPanel2.add(lbl_pwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 520, 140, -1));

        txt_un.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_unActionPerformed(evt);
            }
        });
        jPanel2.add(txt_un, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 410, 219, -1));
        jPanel2.add(txt_pwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 460, 219, -1));

        txtSearchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchNameActionPerformed(evt);
            }
        });
        txtSearchName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchNameKeyReleased(evt);
            }
        });
        jPanel2.add(txtSearchName, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 70, 198, -1));

        jTextField1.setText("Search by Doctor ID");
        jPanel2.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, -1, -1));

        jTextField2.setText("Search by Doctor Attributes");
        jPanel2.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 70, -1, 30));

        lbl_pwd1.setText("Password:");
        jPanel2.add(lbl_pwd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 470, 111, -1));

        jPanel2.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 510, 220, -1));

        jTab_manage.addTab("Manage Doctors", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTab_manage))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTab_manage)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    public void populatecommunities(City c) {
      
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        for(Community com: c.getCommunitylist()) {
            model.addElement(com.getCommunityName());
        }
        
        ddcom.setModel(model);
//        commdropdown.setSelectedIndex(-1);

    }
    
    public void populatecity() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        for(City c: this.citylist.getCitylist()) {
            model.addElement(c.getCityName());
        }
        
        ddcity.setModel(model);

    }
    
    public void populatehospitals(Community c) {
      
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        for(Hospital com: c.getHospitallist()) {
            model.addElement(com.getHospitalName());
        }
        
        ddhn.setModel(model);
//        commdropdown.setSelectedIndex(-1);

    }
    
    private void populateDataToTable() {
        //TableModel is used to manipulate table content.
        // type casts tablemodel to defaultTableModel.
        DefaultTableModel model = (DefaultTableModel) displayTable.getModel();

        model.setRowCount(0); // used to delete empty records from table

//        for (Doctor doctor : doctorlist.getDoctorlist()){
//
//            Object[] row =  new Object[6];
//            row[0] = doctor.getDoctorID(); 
//            row[1] = doctor.getPersonName();
//            row[2] = doctor.getPersonAge();
//            row[3] = doctor.getPersonGender();
////            row[4] = doctor.getHouseAddress();
////            row[4] = doctor.getCommunityName();
////            row[5] = doctor.getCityName();
//
//            model.addRow(row); // adds row to model
//
//        }
    }
    
//    populate the table with given directory or arraylist
    private void populateDataToTable(DoctorDirectory newdoctorlist) {
        //TableModel is used to manipulate table content.
        // type casts tablemodel to defaultTableModel.
        DefaultTableModel model = (DefaultTableModel) displayTable.getModel();

        model.setRowCount(0); // used to delete empty records from table

        for (Doctor d : newdoctorlist.getDoctorlist()){

            Object[] row =  new Object[7];
            row[0] = d.getDoctorID()/*.getPatientId()*/;/*.getEmployeeId()*/
            row[1] = d.getCity();
            row[2] = d.getCommunity();
            row[3] = d.getHospitalname();
            row[4] = d.getDoctorName();
            row[5] = d.getUsername();
            row[6] = d.getPassword();

            model.addRow(row); // adds row to model

        }
    }
    
    
    private void txtSearchIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchIDKeyReleased
        // TODO add your handling code here:
       
        if(!(txtSearchID.getText().isEmpty())) 
        {
            int search = Integer.parseInt(txtSearchID.getText()); // reads the search text as lower case
            DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            displayTable.setRowSorter(tr);
            String regex = String.format("^%s$", search);
            tr.setRowFilter(RowFilter.regexFilter(regex));
        }
        else{
            String search = ""; // reads the search text as lower case
            DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            displayTable.setRowSorter(tr);
//            String regex = String.format("^%s$", search);
            tr.setRowFilter(RowFilter.regexFilter(search));
        }

    }//GEN-LAST:event_txtSearchIDKeyReleased

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = displayTable.getSelectedRow();  // gives index of selected rows
        if(selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this, "Select a record to view");
            btn_Save.setEnabled(false);
//            return;
        }
        else{
            btn_Save.setEnabled(true);
        }
        
        DefaultTableModel model = (DefaultTableModel)displayTable.getModel();
        
        //        Doctor selectedEntry = (Doctor) model.getValueAt(selectedRowIndex, 0);  // to get any value cells from table through row and column

        Doctor selectedEntry = doctorlist.getDoctorlist().get(selectedRowIndex);
//        txt_name.setText(selectedEntry.getPersonName());
//        txt_age.setText(String.valueOf(selectedEntry.getPersonAge()));
//        txt_gender.setSelectedItem(selectedEntry.getPersonGender());
//        txt_ha.setText(selectedEntry.getHouseAddress());
////        txt_comm.setText(selectedEntry.getCommunityName());
////        txt_city.setText(selectedEntry.getCityName());
//        txt_un.setText(String.valueOf(selectedEntry.getUsername()));
//        txt_pwd.setText(selectedEntry.getPassword());
       
        
        
        
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btn_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SaveActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = displayTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Record to update the employee details");
//            btn_Save.setEnabled(false);
            return;
        }
        
        
        DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
        Doctor selectedEntry = doctorlist.getDoctorlist().get(selectedRowIndex);

//        Doctor selectedEntry = (Doctor) model.getValueAt(selectedRowIndex, 0);
//        System.out.println("name"+txtEmployeeName.getText());
        

        if(txt_name.getText().isEmpty() || txt_un.getText().isEmpty() || txt_pwd.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please fill Doctor Information Correctly");
        }
        else{           
//            selectedEntry.setPersonName(txt_name.getText());
//            selectedEntry.setPersonAge(Integer.parseInt(txt_age.getText()));
//            selectedEntry.setPersonGender(txt_gender.getSelectedItem().toString());
//            selectedEntry.setHouseAddress((txt_ha.getText()));
//            selectedEntry.setCommunityName(txt_comm.getText());
//            selectedEntry.setCityName(txt_city.getText());
            selectedEntry.setUsername(txt_un.getText());
            selectedEntry.setPassword(txt_pwd.getText());

            populateDataToTable();

            txt_name.setText("");
            txt_un.setText("");
            txt_pwd.setText("");
        }
    }//GEN-LAST:event_btn_SaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
              
        int selectedRowIndex = displayTable.getSelectedRow();  // gives index of selected rows
        if(selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this, "Please select a Doctor profile");
            return;
           // int selectedRowIndex = displayTable.getSelectedRow();  // gives index of selected rows
        }
        DefaultTableModel model = (DefaultTableModel)displayTable.getModel();
        Doctor selectedEntry = doctorlist.getDoctorlist().get(selectedRowIndex);

//        Doctor selectedEntry = (Doctor) model.getValueAt(selectedRowIndex, 0);  // to get any value cells from table through row and column
//        doctorlist.deleteProfile(selectedEntry);
        JOptionPane.showMessageDialog(this, "Selected Employee Deleted");
        populateDataToTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txt_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nameActionPerformed

    private void lblIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblIdKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_lblIdKeyReleased

    private void txtnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyReleased
        // TODO add your handling code here:
        String PatterN = "^[a-zA-Z '/:]+$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(txtname.getText());
        if(!patternmatch.matches())
        {
            lblnameval.setText("Wrong Input, Please Enter Valid Name.");
        }
        else
        {
            lblnameval.setText("");
        }
    }//GEN-LAST:event_txtnameKeyReleased

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void txtunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtunActionPerformed

    private void txtunKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtunKeyReleased
        // TODO add your handling code here:
        String PatterN = "^[a-zA-Z0-9 '/:]+$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(txtun.getText());
        if(!patternmatch.matches() )
        {
            lblunval.setText("Wrong Input, Please Try Again.");
            error_flag = 1;
        }
        else
        {
            lblunval.setText("");
            error_flag = 0;
        }
        
        boolean isExist = doctorlist.isUserNameExist(txtun.getText());

        if(isExist){
            lblunval.setText("UserName Already Taken.");
            error_flag = 1;

        }
        else{
            lblunval.setText("");
            error_flag = 0;
        }

    }//GEN-LAST:event_txtunKeyReleased

    private void txtpwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpwdActionPerformed

    private void txtpwdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpwdKeyReleased
        // TODO add your handling code here:
        String PatterN = "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(txtpwd.getText());
        if(!patternmatch.matches())
        {
            lblpwdval.setText("Min 8 char, valid A-Z / 0-9 / @$!%*#?&");
            error_flag =1;
        }
        else
        {
            lblpwdval.setText("");
            error_flag = 0;
        }
    }//GEN-LAST:event_txtpwdKeyReleased

    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:           
        String name = txtname.getText();
        String city = ddcity.getSelectedItem().toString();
        String hosname = ddhn.getSelectedItem().toString();
        String community = ddcom.getSelectedItem().toString();
        String username = txtun.getText();
        String pwd = txtpwd.getText();
        
//        String city = cbCity1.getSelectedItem().toString();
//        String community = cbCommunity1.getSelectedItem().toString();
//        String hospitalName = cbhn.getSelectedItem().toString();
//        String DoctorName = txtdn.getText();
//        String userName = txtusername1.getText();
//        String password = txtpassword1.getText();
        
        if(lblnameval.getText() != "" || lblHAval.getText()!="" || lblcommval.getText() != "" || lblcityval.getText() != "" || lblunval.getText() != "" || lblpwdval.getText() != ""){
            JOptionPane.showMessageDialog(this, "Failed!, Please fill Doctor Information Correctly");
        }
        else{
            Doctor doc = doctorlist.addNewDoctor();
            doc.setCity(city);
            doc.setCommunity(community);
            doc.setHospitalname(hosname);
            doc.setDoctorName(name);
            doc.setUsername(username);
            doc.setPassword(pwd);
            JOptionPane.showMessageDialog(this, "Doctor Information saved!");
            
            txtname.setText("");
            txtun.setText("");
            txtpwd.setText("");         
        }
        
        populateDataToTable();

        
          
    }//GEN-LAST:event_btnSaveActionPerformed

    private void jTab_manageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTab_manageMouseClicked
        // TODO add your handling code here:
//        populateDataToTable();
        txtname.setText("");
        txtun.setText("");
        txtpwd.setText("");
    }//GEN-LAST:event_jTab_manageMouseClicked

    private void txtSearchIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchIDActionPerformed

    private void txtSearchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchNameActionPerformed

    private void txtSearchNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchNameKeyReleased
        // TODO add your handling code here:
               
        if(!(txtSearchName.getText().isEmpty())) 
        {
            String search = (txtSearchName.getText()); // reads the search text as lower case
            DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            displayTable.setRowSorter(tr);
            String regex = String.format("(?i)(^%s$)", search);
            tr.setRowFilter(RowFilter.regexFilter(regex));
        }
        else{
            String search = ""; // reads the search text as lower case
            DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            displayTable.setRowSorter(tr);
//            String regex = String.format("^%s$", search);
            tr.setRowFilter(RowFilter.regexFilter(search));
        }

    }//GEN-LAST:event_txtSearchNameKeyReleased

    private void jTab_manageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTab_manageMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTab_manageMouseEntered

    private void ddhnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddhnActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_ddhnActionPerformed

    private void ddcityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddcityActionPerformed
        // TODO add your handling code here:
        if(ddcom.getSelectedIndex() != (-1)){
            lblcommval.setText("");            
        }
        else{
            lblcommval.setText("Select a City.");
        }
        
        String commtxt = (String) ddcom.getSelectedItem();

        Community selectedComm = communitylist.searchCommunity(commtxt);
        
        populatehospitals(selectedComm);   
        
        
    }//GEN-LAST:event_ddcityActionPerformed

    
    
    private void ddcomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddcomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddcomActionPerformed

    private void txt_unActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_unActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_unActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btn_Save;
    private javax.swing.JComboBox<String> ddcity;
    private javax.swing.JComboBox<String> ddcom;
    private javax.swing.JComboBox<String> ddhn;
    private javax.swing.JTable displayTable;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTab_manage;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel jtab_add;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblHA;
    private javax.swing.JLabel lblHAval;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblUN;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_pwd;
    private javax.swing.JLabel lbl_pwd1;
    private javax.swing.JLabel lbl_un;
    private javax.swing.JLabel lblcityval;
    private javax.swing.JLabel lblcomm;
    private javax.swing.JLabel lblcommval;
    private javax.swing.JLabel lblnameval;
    private javax.swing.JLabel lblpwd;
    private javax.swing.JLabel lblpwdval;
    private javax.swing.JLabel lblunval;
    private javax.swing.JTextField txtSearchID;
    private javax.swing.JTextField txtSearchName;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_pwd;
    private javax.swing.JTextField txt_un;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtpwd;
    private javax.swing.JTextField txtun;
    // End of variables declaration//GEN-END:variables
}
