/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.City;
import Model.CityDirectory;
import Model.Community;
import Model.CommunityDirectory;
import Model.Doctor;
import Model.DoctorDirectory;
import Model.EncounterHistory;
import Model.Hospital;
import Model.House;
import Model.PatientDirectory;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Krishnakanth Naik Jarapala
 */
public class manageDoctorjPanel extends javax.swing.JPanel {

    public String checkError;
    DoctorDirectory doctorlist;
    CommunityDirectory communitylist;
    CityDirectory cityHistory;
    City chosenCity;
    Community chosenComm;
    

    /**
     * Creates new form AddDoctor
     */
    public manageDoctorjPanel(CityDirectory citylist, CommunityDirectory communitylist, DoctorDirectory doctorlist ) {
        initComponents();
        this.doctorlist = doctorlist;
        this.communitylist = communitylist;
        this.cityHistory = citylist;
        lblCityVal.setText("Select a City.");
        lblCommval1.setText("Select a Community.");
//        this.workArea = workArea;
        
        
//        populatecity();
//        populatecityInManageDoctor();
        cbCity1.setSelectedIndex(-1);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        lblCommval = new javax.swing.JPanel();
        lblcommunity1 = new javax.swing.JLabel();
        lblhouseaddress1 = new javax.swing.JLabel();
        lblcity1 = new javax.swing.JLabel();
        lblusername1 = new javax.swing.JLabel();
        lblpassword1 = new javax.swing.JLabel();
        txtusername1 = new javax.swing.JTextField();
        txtpassword1 = new javax.swing.JTextField();
        cbCommunity1 = new javax.swing.JComboBox<>();
        btnadd1 = new javax.swing.JButton();
        lblErrorHouseAddress1 = new javax.swing.JLabel();
        lblunval = new javax.swing.JLabel();
        lblpwdvalc = new javax.swing.JLabel();
        cbCity1 = new javax.swing.JComboBox<>();
        txtDoctorName = new javax.swing.JLabel();
        txtdn = new javax.swing.JTextField();
        lblCityVal = new javax.swing.JLabel();
        lblCommval1 = new javax.swing.JLabel();
        cbhn = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        lblnameval = new javax.swing.JLabel();
        jPanelManageDoctor = new javax.swing.JPanel();
        spperson = new javax.swing.JScrollPane();
        tbldoc = new javax.swing.JTable();
        lblcommunity2 = new javax.swing.JLabel();
        lblhouseaddress2 = new javax.swing.JLabel();
        lblcity2 = new javax.swing.JLabel();
        lblusername2 = new javax.swing.JLabel();
        lblpassword2 = new javax.swing.JLabel();
        txtusername2 = new javax.swing.JTextField();
        txtpassword2 = new javax.swing.JTextField();
        cbcommunity2 = new javax.swing.JComboBox<>();
        btnupdate = new javax.swing.JButton();
        btnViewAndUpdate = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        cbCity = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtDoctorName1 = new javax.swing.JTextField();
        cbHospitalName1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        lblpwdval = new javax.swing.JLabel();
        txtSearchID = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        txtSearchName = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(900, 700));

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(900, 700));

        lblCommval.setPreferredSize(new java.awt.Dimension(900, 700));

        lblcommunity1.setText("Community :");

        lblhouseaddress1.setText("Hospital Name:");

        lblcity1.setText("City :");

        lblusername1.setText("User Name :");

        lblpassword1.setText("Password :");

        txtusername1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtusername1KeyReleased(evt);
            }
        });

        txtpassword1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpassword1KeyReleased(evt);
            }
        });

        cbCommunity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCommunity1ActionPerformed(evt);
            }
        });

        btnadd1.setText("Add");
        btnadd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnadd1ActionPerformed(evt);
            }
        });

        lblErrorHouseAddress1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblErrorHouseAddress1KeyReleased(evt);
            }
        });

        lblunval.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblunvalKeyReleased(evt);
            }
        });

        lblpwdvalc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblpwdvalcKeyReleased(evt);
            }
        });

        cbCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCity1ActionPerformed(evt);
            }
        });

        txtDoctorName.setText("Doctor Name:");

        txtdn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtdnKeyReleased(evt);
            }
        });

        cbhn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbhnActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 51, 0));
        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Create New Doctor");

        javax.swing.GroupLayout lblCommvalLayout = new javax.swing.GroupLayout(lblCommval);
        lblCommval.setLayout(lblCommvalLayout);
        lblCommvalLayout.setHorizontalGroup(
            lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblCommvalLayout.createSequentialGroup()
                .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(lblCommvalLayout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(lblusername1))
                    .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(lblCommvalLayout.createSequentialGroup()
                                .addGap(333, 333, 333)
                                .addComponent(lblcity1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblCommvalLayout.createSequentialGroup()
                                .addGap(202, 202, 202)
                                .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblhouseaddress1)
                                    .addComponent(lblcommunity1)
                                    .addComponent(txtDoctorName))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblCommvalLayout.createSequentialGroup()
                            .addGap(117, 117, 117)
                            .addComponent(lblpassword1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cbCommunity1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbCity1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtpassword1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                        .addComponent(cbhn, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtdn, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtusername1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)))
                .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lblCommvalLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblpwdvalc, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblunval, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrorHouseAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCommval1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCityVal, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(lblCommvalLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(lblnameval, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(158, 158, 158))
            .addGroup(lblCommvalLayout.createSequentialGroup()
                .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lblCommvalLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 980, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(lblCommvalLayout.createSequentialGroup()
                        .addGap(399, 399, 399)
                        .addComponent(btnadd1)))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        lblCommvalLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbCommunity1, txtpassword1, txtusername1});

        lblCommvalLayout.setVerticalGroup(
            lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblCommvalLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jLabel5)
                .addGap(98, 98, 98)
                .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblcity1)
                    .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblCityVal, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCommval1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbCommunity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblcommunity1)))
                .addGap(18, 18, 18)
                .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblhouseaddress1)
                        .addComponent(cbhn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblErrorHouseAddress1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblnameval, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtDoctorName))
                .addGap(18, 18, 18)
                .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblunval, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtusername1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblusername1)))
                .addGap(16, 16, 16)
                .addGroup(lblCommvalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpassword1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblpassword1)
                    .addComponent(lblpwdvalc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(btnadd1)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add Doctor", lblCommval);

        jPanelManageDoctor.setPreferredSize(new java.awt.Dimension(900, 700));

        spperson.setPreferredSize(new java.awt.Dimension(900, 100));

        tbldoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Doctor Id", "City", "Community", "Hospital Name", "Doctor Name", "Username", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbldoc.setPreferredSize(new java.awt.Dimension(900, 80));
        spperson.setViewportView(tbldoc);

        lblcommunity2.setText("Community :");

        lblhouseaddress2.setText("Hospital Name:");

        lblcity2.setText("City :");

        lblusername2.setText("User Name :");

        lblpassword2.setText("Password :");

        txtpassword2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpassword2ActionPerformed(evt);
            }
        });

        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btnViewAndUpdate.setText("View & Update");
        btnViewAndUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAndUpdateActionPerformed(evt);
            }
        });

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        cbCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCityActionPerformed(evt);
            }
        });

        jLabel3.setText("Doctor Name:");

        txtDoctorName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorName1ActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Manage Doctor Details");

        txtSearchID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchIDActionPerformed(evt);
            }
        });
        txtSearchID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchIDKeyReleased(evt);
            }
        });

        jTextField1.setText("Search by Doctor ID");

        txtSearchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchNameActionPerformed(evt);
            }
        });
        txtSearchName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchNameKeyReleased(evt);
            }
        });

        jTextField2.setText("Search by Doctor Attributes");

        javax.swing.GroupLayout jPanelManageDoctorLayout = new javax.swing.GroupLayout(jPanelManageDoctor);
        jPanelManageDoctor.setLayout(jPanelManageDoctorLayout);
        jPanelManageDoctorLayout.setHorizontalGroup(
            jPanelManageDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelManageDoctorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spperson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelManageDoctorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnViewAndUpdate)
                .addGap(18, 18, 18)
                .addComponent(btndelete)
                .addGap(35, 35, 35))
            .addGroup(jPanelManageDoctorLayout.createSequentialGroup()
                .addGroup(jPanelManageDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelManageDoctorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 1062, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelManageDoctorLayout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addGroup(jPanelManageDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblpassword2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblusername2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblhouseaddress2, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(lblcommunity2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblcity2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanelManageDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbCity, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbcommunity2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbHospitalName1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDoctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtusername2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtpassword2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addComponent(lblpwdval, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelManageDoctorLayout.createSequentialGroup()
                        .addGap(371, 371, 371)
                        .addComponent(btnupdate))
                    .addGroup(jPanelManageDoctorLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(txtSearchID, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(182, 182, 182)
                        .addComponent(txtSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelManageDoctorLayout.setVerticalGroup(
            jPanelManageDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelManageDoctorLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel4)
                .addGap(43, 43, 43)
                .addGroup(jPanelManageDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearchID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(spperson, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelManageDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewAndUpdate)
                    .addComponent(btndelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanelManageDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblusername2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelManageDoctorLayout.createSequentialGroup()
                        .addGroup(jPanelManageDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblcity2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelManageDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbcommunity2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblcommunity2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelManageDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbHospitalName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblhouseaddress2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelManageDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDoctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtusername2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(jPanelManageDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblpassword2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtpassword2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblpwdval))
                .addGap(26, 26, 26)
                .addComponent(btnupdate)
                .addGap(36, 36, 36))
        );

        jTabbedPane1.addTab("Manage Doctor", jPanelManageDoctor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1082, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tbldoc.getSelectedRow();  // gives index of selected rows
        if(selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this, "Select a entry to delete");
            return;
        }

        DefaultTableModel model = (DefaultTableModel)tbldoc.getModel();
        Doctor selectedEntry = doctorlist.getDoctorlist().get(selectedRowIndex);
        doctorlist.deleteDoctor(selectedEntry);

        JOptionPane.showMessageDialog(this, "Selected Employee Deleted");
        populateDataToTable(); //  deletes record from table and updates all entries
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnViewAndUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAndUpdateActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tbldoc.getSelectedRow();  // gives index of selected rows
        if(selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this, "Select a entry to view");
            return;
        }

        cbCity.setSelectedItem(doctorlist.getDoctorlist().get(selectedRowIndex).getCity());
        cbcommunity2.setSelectedItem(doctorlist.getDoctorlist().get(selectedRowIndex).getCommunity());
        cbHospitalName1.setSelectedItem(doctorlist.getDoctorlist().get(selectedRowIndex).getHospitalname());       
        txtDoctorName1.setText(doctorlist.getDoctorlist().get(selectedRowIndex).getDoctorName());
        txtusername2.setText(doctorlist.getDoctorlist().get(selectedRowIndex).getUsername());
        txtpassword2.setText(doctorlist.getDoctorlist().get(selectedRowIndex).getPassword());
    }//GEN-LAST:event_btnViewAndUpdateActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tbldoc.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Record to update the employee details");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tbldoc.getModel();
        Doctor selectedEntry = doctorlist.getDoctorlist().get(selectedRowIndex);

        //Patient selectedEntry = (Patient) model.getValueAt(selectedRowIndex, 1);
        //        selectedEntry.setEmployeeId(txtEmployeeId.getText());
        
//        selectedEntry.setHouseAddress(txtHospitalName.getText());
        selectedEntry.setCity(cbCity.getSelectedItem().toString());
                selectedEntry.setCommunity(cbcommunity2.getSelectedItem().toString());
        selectedEntry.setHospitalname(cbHospitalName1.getSelectedItem().toString());

        selectedEntry.setDoctorName(txtDoctorName1.getText());

        selectedEntry.setUsername(txtusername1.getText());
        selectedEntry.setPassword(txtpassword1.getText());

        populateDataToTable();

        //once deleted all the fiels in view model will be deleted
        
//        txtHospitalName.setText("");
//        txtcity1.setText("");
        cbcommunity2.setSelectedItem(-1);
        cbHospitalName1.setSelectedItem(-1);
        cbCity.setSelectedItem(-1);
        txtDoctorName1.setText("");
        txtusername1.setText("");
        txtpassword1.setText("");
    }//GEN-LAST:event_btnupdateActionPerformed

    private void lblpwdvalcKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblpwdvalcKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_lblpwdvalcKeyReleased

    private void lblunvalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblunvalKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_lblunvalKeyReleased

    private void lblErrorHouseAddress1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblErrorHouseAddress1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_lblErrorHouseAddress1KeyReleased

    private void btnadd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnadd1ActionPerformed
        // TODO add your handling code here:
        String city = cbCity1.getSelectedItem().toString();
        String community = cbCommunity1.getSelectedItem().toString();
        String hospitalName = cbhn.getSelectedItem().toString();
        String DoctorName = txtdn.getText();
        String userName = txtusername1.getText();
        String password = txtpassword1.getText();
        
        if(cbCity1.getSelectedIndex() != -1 || cbCommunity1.getSelectedIndex() != -1 || cbhn.getSelectedIndex() != -1 || lblnameval.getText() !=""  || lblpwdvalc.getText() != "" || lblunval.getText() != ""){
            JOptionPane.showMessageDialog(this,"Please provide valid inputs to all fields");

        }
        else{
            Doctor doc = doctorlist.addNewDoctor(); //
            doc.setCity(city);
            doc.setCommunity(community);
            doc.setHospitalname(hospitalName);
            doc.setDoctorName(DoctorName);
            doc.setUsername(userName);
            doc.setPassword(password);

            // shows a dialogue message when the data clicked save button
            JOptionPane.showMessageDialog(this,"Doctor Information saved!.");

            // empties all the fields after saving the entered data to ArrayList to facilitate new entries.
          
            cbCity1.setSelectedIndex(-1);
            cbCommunity1.setSelectedIndex(-1);
            cbhn.setSelectedIndex(-1);
            txtdn.setText("");
            txtusername1.setText("");
            txtpassword1.setText("");

            populateDataToTable();

        }
    }//GEN-LAST:event_btnadd1ActionPerformed

    private void cbCommunity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCommunity1ActionPerformed
        // TODO add your handling code here:
        if(cbCommunity1.getSelectedIndex() != (-1)){
            lblCommval1.setText("");
        }
        else{
            lblCommval1.setText("Select a Community.");

        }
        
        
        for(Community comm: chosenCity.getCommunitylist()){
            if(comm.getCommunityName().equals(cbCommunity1.getSelectedItem()))
                chosenComm = comm;
        }
        String selectedCommText = cbCommunity1.getSelectedItem().toString();
//        JOptionPane.showMessageDialog(this,selectedCommText);
        
        Community selectedComm = communitylist.searchCommunity(selectedCommText);
        populateHospitals(selectedComm);
    }//GEN-LAST:event_cbCommunity1ActionPerformed

    private void txtpassword1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpassword1KeyReleased
        // TODO add your handling code here:
        String PatterN = "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(txtpassword1.getText());
        if(!patternmatch.matches())
        {
            lblpwdvalc.setText("Min 8 char, valid A-Z / 0-9 / @$!%*#?&");
            
        }
        else
        {
            lblpwdvalc.setText("");
           
        }
    }//GEN-LAST:event_txtpassword1KeyReleased

    private void cbCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCityActionPerformed
        // TODO add your handling code here:
        if(cbCity1.getSelectedIndex() != (-1)){
            lblCityVal.setText("");            
        }
        else{
            lblCityVal.setText("Select a City.");
        }
        
        //        this.chosenCity = (City) citydropdown.getSelectedItem();
//        JOptionPane.showMessageDialog(this, citydropdown.getSelectedItem());

        for(City x: this.cityHistory.getCitylist()){
            if(x.getCityName().equals(cbCity1.getSelectedItem())){
                chosenCity=x;
            }
        }
//        lblCityVal.setText("");
        populatecommunitiesInManageDoctor(); 
        
    }//GEN-LAST:event_cbCityActionPerformed

    private void cbCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCity1ActionPerformed
        // TODO add your handling code here:
        
        if(cbCity1.getSelectedIndex() != (-1)){
            lblCityVal.setText("");            
        }
        else{
            lblCityVal.setText("Select a City.");
        }
        
        for(City x: this.cityHistory.getCitylist()){
            if(x.getCityName().equals(cbCity1.getSelectedItem())){
                chosenCity=x;
            }
        }
        populatecommunities(); 
    }//GEN-LAST:event_cbCity1ActionPerformed

    private void txtDoctorName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorName1ActionPerformed

    private void txtpassword2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpassword2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpassword2ActionPerformed

    private void txtSearchIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchIDActionPerformed

    private void txtSearchIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchIDKeyReleased
        // TODO add your handling code here:

        if(!(txtSearchID.getText().isEmpty()))
        {
            int search = Integer.parseInt(txtSearchID.getText()); // reads the search text as lower case
            DefaultTableModel model = (DefaultTableModel) tbldoc.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tbldoc.setRowSorter(tr);
            String regex = String.format("^%s$", search);
            tr.setRowFilter(RowFilter.regexFilter(regex));
        }
        else{
            String search = ""; // reads the search text as lower case
            DefaultTableModel model = (DefaultTableModel) tbldoc.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tbldoc.setRowSorter(tr);
            //            String regex = String.format("^%s$", search);
            tr.setRowFilter(RowFilter.regexFilter(search));
        }
    }//GEN-LAST:event_txtSearchIDKeyReleased

    private void txtSearchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchNameActionPerformed

    private void txtSearchNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchNameKeyReleased
        // TODO add your handling code here:

        if(!(txtSearchName.getText().isEmpty()))
        {
            String search = (txtSearchName.getText()); // reads the search text as lower case
            DefaultTableModel model = (DefaultTableModel) tbldoc.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tbldoc.setRowSorter(tr);
            String regex = String.format("(?i)(^%s$)", search);
            tr.setRowFilter(RowFilter.regexFilter(regex));
        }
        else{
            String search = ""; // reads the search text as lower case
            DefaultTableModel model = (DefaultTableModel) tbldoc.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tbldoc.setRowSorter(tr);
            //            String regex = String.format("^%s$", search);
            tr.setRowFilter(RowFilter.regexFilter(search));
        }
    }//GEN-LAST:event_txtSearchNameKeyReleased

    private void cbhnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbhnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbhnActionPerformed

    private void txtdnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdnKeyReleased
        // TODO add your handling code here:
        
        String PatterN = "^[a-zA-Z '/:]+$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(txtdn.getText());
        if(!patternmatch.matches())
        {
            lblnameval.setText("Wrong Input, Please Enter Valid Name.");
        }
        else
        {
            lblnameval.setText("");
        }
    }//GEN-LAST:event_txtdnKeyReleased

    private void txtusername1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtusername1KeyReleased
        // TODO add your handling code here:
        String PatterN = "^[a-zA-Z0-9 '/:]+$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(txtusername1.getText());
        if(!patternmatch.matches() )
        {
            lblunval.setText("Wrong Input, Please Try Again.");
        }
        else
        {
            lblunval.setText("");
        }
        
        boolean isExist = doctorlist.isUserNameExist(txtusername1.getText());

        if(isExist){
            lblunval.setText("UserName Already Taken.");

        }
        else{
            lblunval.setText("");
        }
    }//GEN-LAST:event_txtusername1KeyReleased

    
    public void populatecommunities() {
      
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        for(Community com: this.chosenCity.getCommunitylist()) {
            model.addElement(com.getCommunityName());
        }
        
        cbCommunity1.setModel(model);
//        commdropdown.setSelectedIndex(-1);

    }
    
    public void populatecommunitiesInManageDoctor() {
      
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        for(Community com: this.chosenCity.getCommunitylist()) {
            model.addElement(com.getCommunityName());
        }
        
        cbcommunity2.setModel(model);
//        commdropdown.setSelectedIndex(-1);

    }
    
    public void populateHospitals(Community comm) {
      
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        for(Hospital hos: comm.getHospitallist()) {
            model.addElement(hos.getHospitalName());
        }
        
        cbhn.setModel(model);
//        commdropdown.setSelectedIndex(-1);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnViewAndUpdate;
    private javax.swing.JButton btnadd1;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> cbCity;
    private javax.swing.JComboBox<String> cbCity1;
    private javax.swing.JComboBox<String> cbCommunity1;
    private javax.swing.JComboBox<String> cbHospitalName1;
    private javax.swing.JComboBox<String> cbcommunity2;
    private javax.swing.JComboBox<String> cbhn;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanelManageDoctor;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lblCityVal;
    private javax.swing.JPanel lblCommval;
    private javax.swing.JLabel lblCommval1;
    private javax.swing.JLabel lblErrorHouseAddress1;
    private javax.swing.JLabel lblcity1;
    private javax.swing.JLabel lblcity2;
    private javax.swing.JLabel lblcommunity1;
    private javax.swing.JLabel lblcommunity2;
    private javax.swing.JLabel lblhouseaddress1;
    private javax.swing.JLabel lblhouseaddress2;
    private javax.swing.JLabel lblnameval;
    private javax.swing.JLabel lblpassword1;
    private javax.swing.JLabel lblpassword2;
    private javax.swing.JLabel lblpwdval;
    private javax.swing.JLabel lblpwdvalc;
    private javax.swing.JLabel lblunval;
    private javax.swing.JLabel lblusername1;
    private javax.swing.JLabel lblusername2;
    private javax.swing.JScrollPane spperson;
    private javax.swing.JTable tbldoc;
    private javax.swing.JLabel txtDoctorName;
    private javax.swing.JTextField txtDoctorName1;
    private javax.swing.JTextField txtSearchID;
    private javax.swing.JTextField txtSearchName;
    private javax.swing.JTextField txtdn;
    private javax.swing.JTextField txtpassword1;
    private javax.swing.JTextField txtpassword2;
    private javax.swing.JTextField txtusername1;
    private javax.swing.JTextField txtusername2;
    // End of variables declaration//GEN-END:variables


    
    public void populatecity() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        for(City c: this.cityHistory.getCitylist()) {
            model.addElement(c.getCityName());
        }
        
        cbCity1.setModel(model);
    }
    
    public void populatecityInManageDoctor() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        for(City c: this.cityHistory.getCitylist()) {
            model.addElement(c.getCityName());
        }
        
        cbCity.setModel(model);
    }
    
    private void populateDataToTable() {
        //TableModel is used to manipulate table content.
        // type casts tablemodel to defaultTableModel.
        DefaultTableModel model = (DefaultTableModel) tbldoc.getModel();
        model.setRowCount(0); // deleting empty records

        // looping over profileHistory of employees.
        // getProfileHistory returns the history of employee records.
        for (Doctor d : doctorlist.getDoctorlist()){

            // row is array of objects with 9 menbers. (1 for each column)
            Object[] row =  new Object[7];
            row[0] = d.getDoctorID()/*.getPatientId()*/;/*.getEmployeeId()*/
            row[1] = d.getCity();
            row[2] = d.getCommunity();
            row[3] = d.getHospitalname();
            row[4] = d.getDoctorName();
            row[5] = d.getUsername();
            row[6] = d.getPassword();



            model.addRow(row); // adds row to model

        }
    }
}
