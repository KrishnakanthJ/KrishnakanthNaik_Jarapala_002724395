/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Model.HospitalDirectory;
import Model.Hospital;
//import medicalresourcemanagement.Patient;

/**
 *
 * @author Krishnakanth Naik Jarapala
 */
public class manageHospitaljPanel extends javax.swing.JPanel {

    HospitalDirectory hospitalHistory;
    private String checkError;
    /**
     * Creates new form AddHospital
     */
    public manageHospitaljPanel(HospitalDirectory hospitalHistory) {
        initComponents();
        this.hospitalHistory = hospitalHistory;
        btnUpdate.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblHptl = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtHospitalName = new javax.swing.JTextField();
        cbCommunity = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtHospitalId = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(900, 700));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setPreferredSize(new java.awt.Dimension(900, 80));

        tblHptl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Hospital Id", "Hospital Name", "Community", "City"
            }
        ));
        tblHptl.setPreferredSize(new java.awt.Dimension(900, 80));
        jScrollPane1.setViewportView(tblHptl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 109, 1029, 100));

        jLabel2.setText("Community :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(246, 312, -1, -1));

        jLabel3.setText("City :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(305, 360, -1, -1));

        jLabel4.setText("Hospital Id :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(253, 462, -1, -1));

        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });
        add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 357, 155, -1));

        txtHospitalName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHospitalNameActionPerformed(evt);
            }
        });
        add(txtHospitalName, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 405, 155, -1));

        cbCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Community", "Brigham", "Huntington Avenue", "Mission Hill", "Brookline", "Fenway" }));
        add(cbCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 309, 147, -1));

        jLabel5.setText("Hospital Name :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 408, -1, -1));

        txtHospitalId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHospitalIdActionPerformed(evt);
            }
        });
        add(txtHospitalId, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 456, 155, -1));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 530, -1, -1));

        btnView.setText("View & Update");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(766, 227, -1, -1));

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 227, -1, -1));

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(478, 530, -1, -1));

        jLabel6.setBackground(new java.awt.Color(255, 51, 0));
        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Manage Hospitals");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 29, 1068, -1));

        jLabel1.setText(" ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(647, 309, 191, 30));

        jLabel7.setText(" ");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(647, 405, 191, 30));

        jLabel8.setText(" ");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(647, 456, 191, 30));

        jLabel9.setText(" ");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(647, 357, 191, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void txtHospitalNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHospitalNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHospitalNameActionPerformed

    private void txtHospitalIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHospitalIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHospitalIdActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
        if(checkError != null /*|| (txtname.getText() == null  || txtphone.getText() == null || txthouseaddress.getText() == null || txtcity.getText() ==null || txtusername.getText() == null ||txtpassword.getText() == null)*/){
            JOptionPane.showMessageDialog(this,"Please provide valid inputs to all fields");

        }
        else{
            String community = cbCommunity.getSelectedItem().toString();
            String city = txtCity.getText();
            String hospitalName = txtHospitalName.getText();
            String hospitalId = String.valueOf(txtHospitalId.getText());

            Hospital per = hospitalHistory.addNewHospital(); // 

            // sets value to ArrayList from the fields that the data is entered.

            per.setCommunityName(community);
            per.setCityName(city);
            per.setHospitalId(Integer.parseInt(hospitalId));
            per.setHospitalName(hospitalName);
                    
          

            // shows a dialogue message when the data clicked save button
            JOptionPane.showMessageDialog(this,"Hospital details added");

            // empties all the fields after saving the entered data to ArrayList to facilitate new entries.
            
            cbCommunity.setSelectedIndex(-1);
            txtCity.setText("");
            txtHospitalName.setText("");
            txtHospitalId.setText("");
            populateDataToTable();
            

        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        
        
        int selectedRowIndex = tblHptl.getSelectedRow();  // gives index of selected rows
        if(selectedRowIndex < 0)
        {
           JOptionPane.showMessageDialog(this, "Select a entry to view");
           return;
        }
        


          
        
        cbCommunity.setSelectedItem(hospitalHistory.getHospitalHistory().get(selectedRowIndex).getCommunityName());
        txtCity.setText(hospitalHistory.getHospitalHistory().get(selectedRowIndex).getCityName());
        txtHospitalName.setText(hospitalHistory.getHospitalHistory().get(selectedRowIndex).getHospitalName());
        txtHospitalId.setText(String.valueOf(hospitalHistory.getHospitalHistory().get(selectedRowIndex).getHospitalId()));
        
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        
        int selectedRowIndex = tblHptl.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Record to update the employee details");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblHptl.getModel();
        Hospital selectedEntry = hospitalHistory.getHospitalHistory().get(selectedRowIndex);

//        //Patient selectedEntry = (Patient) model.getValueAt(selectedRowIndex, 1);
////        selectedEntry.setEmployeeId(txtEmployeeId.getText());
//        selectedEntry.setName(txtname1.getText());
//        
//        selectedEntry.setAge(Integer.parseInt(txtage1.getText()));
//        selectedEntry.setPhone(Long.parseLong(txtphone1.getText()));

        selectedEntry.setCityName(txtCity.getText());
        selectedEntry.setCommunityName(cbCommunity.getSelectedItem().toString());
        selectedEntry.setHospitalName(txtHospitalName.getText());
        selectedEntry.setHospitalId(Integer.parseInt(txtHospitalId.getText()));
        
        

  
        populateDataToTable();
        
        //once deleted all the fiels in view model will be deleted
          txtCity.setText("");
          cbCommunity.setSelectedIndex(-1);
          txtHospitalName.setText("");
          txtHospitalId.setText("");
          btnSave.setEnabled(true);
           
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
          int selectedRowIndex = tblHptl.getSelectedRow();  // gives index of selected rows
        if(selectedRowIndex < 0)
        {
           JOptionPane.showMessageDialog(this, "Select a entry to delete");
           return;
        }
        
                DefaultTableModel model = (DefaultTableModel)tblHptl.getModel();
                Hospital selectedEntry = hospitalHistory.getHospitalHistory().get(selectedRowIndex);
                hospitalHistory.deleteHospital(selectedEntry);
                
        JOptionPane.showMessageDialog(this, "Selected hospital entry deleted");
         populateDataToTable(); //  deletes record from table and updates all entries

         
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> cbCommunity;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHptl;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtHospitalId;
    private javax.swing.JTextField txtHospitalName;
    // End of variables declaration//GEN-END:variables

 private void populateDataToTable() {
        //TableModel is used to manipulate table content.
        // type casts tablemodel to defaultTableModel.
    DefaultTableModel model = (DefaultTableModel) tblHptl.getModel();
    model.setRowCount(0); // deleting empty records
    
    // looping over profileHistory of employees.
    // getProfileHistory returns the history of employee records.
    for (Hospital p : hospitalHistory.getHospitalHistory()){
        
        // row is array of objects with 9 menbers. (1 for each column)
        Object[] row =  new Object[5];
        row[0] = p.getHospitalId();
        row[1] = p.getHospitalName();
        row[2] = p.getCommunityName();
        row[3] = p.getCityName();

        model.addRow(row); // adds row to model

    }
    }
}
