/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Community;
import Model.CommunityDirectory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Model.HospitalDirectory;
import Model.Hospital;
import Model.PatientDirectory;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
//import medicalresourcemanagement.Patient;

/**
 *
 * @author Krishnakanth Naik Jarapala
 */
public class manageCommunityjPanel extends javax.swing.JPanel {

    CommunityDirectory communitylist;
    PatientDirectory patientlist ;
    private String checkError;
    /**
     * Creates new form AddHospital
     */
    public manageCommunityjPanel(CommunityDirectory communitylist, PatientDirectory patientlist) {
        initComponents();
        this.communitylist = communitylist;
        this.patientlist = patientlist;
        btnUpdate.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblComm = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbCommunity = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lblCommVal = new javax.swing.JLabel();
        lblCityVal = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 204, 204));
        setPreferredSize(new java.awt.Dimension(900, 700));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setPreferredSize(new java.awt.Dimension(900, 80));

        tblComm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Community", "City"
            }
        ));
        tblComm.setPreferredSize(new java.awt.Dimension(900, 80));
        jScrollPane1.setViewportView(tblComm);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 109, 1029, 180));

        jLabel2.setText("Community :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 380, -1, -1));

        jLabel3.setText("City :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 420, -1, -1));

        cbCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCommunityActionPerformed(evt);
            }
        });
        cbCommunity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cbCommunityKeyReleased(evt);
            }
        });
        add(cbCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 380, 155, -1));

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 530, -1, -1));

        btnView.setText("View & Update");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 310, -1, -1));

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(478, 530, -1, -1));

        jLabel6.setBackground(new java.awt.Color(255, 51, 0));
        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Manage Communities");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 29, 1068, -1));

        lblCommVal.setText(" ");
        add(lblCommVal, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 380, 191, 30));

        lblCityVal.setText(" ");
        add(lblCityVal, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 420, 191, 30));

        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });
        txtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCityKeyReleased(evt);
            }
        });
        add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 420, 155, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void cbCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCommunityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCommunityActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        
        if(lblCityVal.getText() != "" || lblCommVal.getText() != "" ){
            JOptionPane.showMessageDialog(this,"Please provide valid inputs to all fields");
        }
        else
        {
            String community = cbCommunity.getText();
            String city = txtCity.getText();

            Community per = communitylist.addNewCommunity(); // 

            // sets value to ArrayList from the fields that the data is entered.

            per.setCommunityName(community);
            per.setCityName(city);
                    
          

            // shows a dialogue message when the data clicked save button
            JOptionPane.showMessageDialog(this,"Community details added");

            // empties all the fields after saving the entered data to ArrayList to facilitate new entries.
            
            cbCommunity.setText("");
            txtCity.setText("");
            populateDataToTable();
            

        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblComm.getSelectedRow();  // gives index of selected rows
        if(selectedRowIndex < 0)
        {
           JOptionPane.showMessageDialog(this, "Select a entry to view");
           return;
        }
        
        cbCommunity.setText(communitylist.getPatientlist().get(selectedRowIndex).getCommunityName());
        txtCity.setText(communitylist.getPatientlist().get(selectedRowIndex).getCityName());
        
        btnAdd.setEnabled(false);
        btnUpdate.setEnabled(true);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        
        int selectedRowIndex = tblComm.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Record to update the employee details");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblComm.getModel();
        Community selectedEntry = communitylist.getPatientlist().get(selectedRowIndex);

//        //Patient selectedEntry = (Patient) model.getValueAt(selectedRowIndex, 1);
////        selectedEntry.setEmployeeId(txtEmployeeId.getText());
//        selectedEntry.setName(txtname1.getText());
//        
//        selectedEntry.setAge(Integer.parseInt(txtage1.getText()));
//        selectedEntry.setPhone(Long.parseLong(txtphone1.getText()));

        selectedEntry.setCommunityName(cbCommunity.getText());
        selectedEntry.setCityName(txtCity.getText());
        
        populateDataToTable();
        
        //once deleted all the fiels in view model will be deleted
        cbCommunity.setText("");
        txtCity.setText("");
        btnAdd.setEnabled(true);
        btnUpdate.setEnabled(false);
           
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void cbCommunityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbCommunityKeyReleased
        // TODO add your handling code here:
        String PatterN = "^[a-zA-Z0-9 '/:]+$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(cbCommunity.getText());
        if(!patternmatch.matches())
        {
            lblCommVal.setText("Wrong Input, Please Try Again.");
        }
        else
        {
            lblCommVal.setText("");
        }
    }//GEN-LAST:event_cbCommunityKeyReleased

    private void txtCityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityKeyReleased
        // TODO add your handling code here:
        String PatterN = "^[a-zA-Z0-9 '/:]+$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(txtCity.getText());
        if(!patternmatch.matches())
        {
            lblCityVal.setText("Wrong Input, Please Try Again.");
        }
        else
        {
            lblCityVal.setText("");
        }
    }//GEN-LAST:event_txtCityKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JTextField cbCommunity;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCityVal;
    private javax.swing.JLabel lblCommVal;
    private javax.swing.JTable tblComm;
    private javax.swing.JTextField txtCity;
    // End of variables declaration//GEN-END:variables

 private void populateDataToTable() {
        //TableModel is used to manipulate table content.
        // type casts tablemodel to defaultTableModel.
    DefaultTableModel model = (DefaultTableModel) tblComm.getModel();
    model.setRowCount(0); // deleting empty records
    
    // looping over profileHistory of employees.
    // getProfileHistory returns the history of employee records.
    for (Community p : communitylist.getPatientlist()){
        
        // row is array of objects with 9 menbers. (1 for each column)
        Object[] row =  new Object[2];
        row[0] = p.getCommunityName();
        row[1] = p.getCityName();
        model.addRow(row); // adds row to model

    }
    }
}
