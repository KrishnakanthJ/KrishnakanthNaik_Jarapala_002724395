/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.City;
import Model.CityDirectory;
import Model.Community;
import Model.CommunityDirectory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Model.HospitalDirectory;
import Model.Hospital;
import Model.PatientDirectory;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
//import medicalresourcemanagement.Patient;

/**
 *
 * @author Krishnakanth Naik Jarapala
 */
public class manageCommunityjPanel extends javax.swing.JPanel {
    
    CityDirectory citylist;
    ArrayList<Community> chosenCommlist;
    CommunityDirectory communitylist;
    private String checkError;
    private City chosenCity;
    /**
     * Creates new form AddHospital
     */
    public manageCommunityjPanel(CityDirectory citylist) {
        initComponents();
        this.citylist = citylist;
        lblCityVal1.setText("Select a City!");
        
        populatecity();
//        this.patientlist = patientlist;
//        btnUpdate.setEnabled(false);
//        citydropdown.setSelectedIndex(-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbCommunity = new javax.swing.JTextField();
        btnAddcity = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lblcommval = new javax.swing.JLabel();
        lblCityVal = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        citydropdown = new javax.swing.JComboBox<>();
        addCommunity = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblCityVal1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 204));
        setPreferredSize(new java.awt.Dimension(900, 700));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Community :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 440, -1, -1));

        jLabel3.setText("City :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 400, 50, -1));

        cbCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCommunityActionPerformed(evt);
            }
        });
        cbCommunity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cbCommunityKeyReleased(evt);
            }
        });
        add(cbCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 440, 230, -1));

        btnAddcity.setText("Add city");
        btnAddcity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddcityActionPerformed(evt);
            }
        });
        add(btnAddcity, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 180, -1, -1));

        jLabel6.setBackground(new java.awt.Color(255, 51, 0));
        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Manage Communities");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 1068, -1));

        lblcommval.setText(" ");
        add(lblcommval, new org.netbeans.lib.awtextra.AbsoluteConstraints(681, 440, 220, 30));

        lblCityVal.setText(" ");
        add(lblCityVal, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 120, 191, 30));

        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });
        txtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCityKeyReleased(evt);
            }
        });
        add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 120, 155, -1));

        citydropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                citydropdownActionPerformed(evt);
            }
        });
        citydropdown.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                citydropdownKeyReleased(evt);
            }
        });
        add(citydropdown, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 400, 230, -1));

        addCommunity.setText("Add Community");
        addCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCommunityActionPerformed(evt);
            }
        });
        add(addCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 500, -1, -1));

        jLabel7.setBackground(new java.awt.Color(255, 51, 0));
        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Manage Cities");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1068, -1));

        jLabel4.setText("City :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 120, -1, -1));

        lblCityVal1.setText(" ");
        add(lblCityVal1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 400, 191, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void cbCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCommunityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCommunityActionPerformed

    private void btnAddcityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddcityActionPerformed
        // TODO add your handling code here:        
        if(this.citylist.isCityExist(txtCity.getText().toUpperCase())){
            JOptionPane.showMessageDialog(this, "City Already Exists!");            
        }
        else{
            this.citylist.addNewCity(txtCity.getText().toUpperCase());
            JOptionPane.showMessageDialog(this, "City added!");
        }
        
        populatecity();
        txtCity.setText("");
        lblCityVal1.setText("Select a City!");
    }//GEN-LAST:event_btnAddcityActionPerformed

    public void populatecity() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        for(City c: this.citylist.getCitylist()) {
            model.addElement(c.getCityName());
        }       
        citydropdown.setModel(model);
        citydropdown.setSelectedIndex(-1);
    }
    
    
    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void cbCommunityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbCommunityKeyReleased
        // TODO add your handling code here:
        String PatterN = "^[a-zA-Z0-9 '/:]+$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(cbCommunity.getText());
        if(!patternmatch.matches())
        {
            lblcommval.setText("Wrong Input, Please Try Again.");
        }
        else
        {
            lblcommval.setText("");
        }
    }//GEN-LAST:event_cbCommunityKeyReleased

    private void txtCityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityKeyReleased
        // TODO add your handling code here:
        String PatterN = "^[a-zA-Z0-9 '/:]+$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(txtCity.getText());
        if(!patternmatch.matches())
        {
            lblCityVal.setText("Wrong Input, Please Try Again.");
        }
        else
        {
            lblCityVal.setText("");
        }
    }//GEN-LAST:event_txtCityKeyReleased

    private void citydropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_citydropdownActionPerformed
        // TODO add your handling code here:
        
//        this.chosenCity = (City) citydropdown.getSelectedItem();
//        JOptionPane.showMessageDialog(this, citydropdown.getSelectedItem());
//      

        for(City x: this.citylist.getCitylist()){
            if(x.getCityName().equals(citydropdown.getSelectedItem())){
                chosenCity= x;
            }
        }
        
        if(citydropdown.getSelectedIndex() != (-1)){
            lblCityVal1.setText("");            
        }
        else{
            lblCityVal1.setText("Select a City.");
        }

//        for(City xx: citylist){
//            JOptionPane.showMessageDialog(this, xx.getCityName());
//        }
//        JOptionPane.showMessageDialog(this, this.citylist.getCitylist().contains(citydropdown.getSelectedItem()));
//        
//        JOptionPane.showMessageDialog(this, chosenCity);
//
//        chosenCommlist = chosenCity.getCommunitylist();
//        JOptionPane.showMessageDialog(this, (chosenCommlist).size());

    }//GEN-LAST:event_citydropdownActionPerformed

    private void addCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCommunityActionPerformed
        // TODO add your handling code here:
        if(lblCityVal1.getText() == ""  && lblcommval.getText() == "" && cbCommunity.getText() != "" )
        {
            boolean flag = chosenCity.isCommunityExist(cbCommunity.getText().toUpperCase());
            if(flag){
                JOptionPane.showMessageDialog(this, "Community Already Exists!");            
            }
            else{
                chosenCity.addNewCommunity(cbCommunity.getText().toUpperCase());
                JOptionPane.showMessageDialog(this, "Community added!");
            }
            
            citydropdown.setSelectedIndex(-1);
            cbCommunity.setText("");
        }
        else{
            JOptionPane.showMessageDialog(this, "Please provide all details.");
        }
    }//GEN-LAST:event_addCommunityActionPerformed

    private void citydropdownKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_citydropdownKeyReleased
        // TODO add your handling code here:
        for(City x: this.citylist.getCitylist()){
//            JOptionPane.showMessageDialog(this, x);
            if(x.getCityName().equals(citydropdown.getSelectedItem().toString())){
                chosenCity= x;
            }
        } 
        
        lblCityVal1.setText("");
//        populatecommunities();
    }//GEN-LAST:event_citydropdownKeyReleased
//
//    public void populatecommunities() {
////        for(Community com: this.chosenCity.getCommunitylist()) {
////            System.out.println(com.getCommunityName());
////        }
//        
//        DefaultComboBoxModel model = new DefaultComboBoxModel();
//        
//        for(Community com: this.chosenCity.getCommunitylist()) {
//            model.addElement(com.getCommunityName());
//        }
//        
//        commdropdown.setModel(model);
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCommunity;
    private javax.swing.JButton btnAddcity;
    private javax.swing.JTextField cbCommunity;
    private javax.swing.JComboBox<String> citydropdown;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lblCityVal;
    private javax.swing.JLabel lblCityVal1;
    private javax.swing.JLabel lblcommval;
    private javax.swing.JTextField txtCity;
    // End of variables declaration//GEN-END:variables
//
// private void populateDataToTable() {
//        //TableModel is used to manipulate table content.
//        // type casts tablemodel to defaultTableModel.
//    DefaultTableModel model = (DefaultTableModel) tblComm.getModel();
//    model.setRowCount(0); // deleting empty records
//    
//    // looping over profileHistory of employees.
//    // getProfileHistory returns the history of employee records.
//    for (Community p : communitylist.getPatientlist()){
//        
//        // row is array of objects with 9 menbers. (1 for each column)
//        Object[] row =  new Object[2];
//        row[0] = p.getCommunityName();
//        row[1] = p.getCityName();
//        model.addRow(row); // adds row to model
//
//    }
//    }
}
