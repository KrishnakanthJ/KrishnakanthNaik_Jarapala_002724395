/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.CommunityDirectory;
import Model.Doctor;
import Model.Encounter;
import Model.EncounterHistory;
import Model.Patient;
import Model.PatientDirectory;
import Model.Person;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Krishnakanth Naik Jarapala
 */
public class managePatientJPanel extends javax.swing.JPanel {
    
    PatientDirectory patientlist;
    PatientDirectory newpatientlist;
    Patient patient;
    EncounterHistory encounterhistory;
    EncounterHistory patientencounterhistory;
    CommunityDirectory communitylist;
    JPanel WorkArea;

    int error_flag = 0;
    
    /**
     * Creates new form managePatientJPanel
     */
    public managePatientJPanel(JPanel workArea, PatientDirectory patientlist, EncounterHistory encounterhistory, CommunityDirectory communitylist) {
        initComponents();
        this.WorkArea = workArea;
        this.patientlist = patientlist;
        this.newpatientlist = new PatientDirectory();
        this.encounterhistory = encounterhistory;
        this.patientencounterhistory = new EncounterHistory();
        this.patient = new Patient();
        this.communitylist = communitylist;
        Set<String> unique_communities = new HashSet<String>();

        unique_communities = communitylist.fetchUniqueCommunities();
        
        for(String s: unique_communities){
            txtcomm.addItem(s);
        }
        for(String s: unique_communities){
            txt_comm.addItem(s);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    private void populateDataToTable() {
        //TableModel is used to manipulate table content.
        // type casts tablemodel to defaultTableModel.
        DefaultTableModel model = (DefaultTableModel) displayTable.getModel();

        model.setRowCount(0); // used to delete empty records from table

        for (Patient doctor : patientlist.getPatientlist()){

            Object[] row =  new Object[6];
            row[0] = doctor.getPatientID(); 
            row[1] = doctor.getPersonName();
            row[2] = doctor.getPersonAge();
            row[3] = doctor.getPersonGender();
//            row[4] = doctor.getHouseAddress();
            row[4] = doctor.getCommunityName();
            row[5] = doctor.getCityName();

            model.addRow(row); // adds row to model

        }
    }
    
//    populate the table with given directory or arraylist
    private void populateDataToTable(PatientDirectory newpatientlist) {
        //TableModel is used to manipulate table content.
        // type casts tablemodel to defaultTableModel.
        DefaultTableModel model = (DefaultTableModel) displayTable.getModel();

        model.setRowCount(0); // used to delete empty records from table

        for(Patient doctor : newpatientlist.getPatientlist()){

            Object[] row =  new Object[7];
            row[0] = doctor.getPatientID(); 
            row[1] = doctor.getPersonName();
            row[2] = doctor.getPersonAge();
            row[3] = doctor.getPersonGender();
//            row[4] = doctor.getHouseAddress();
            row[4] = doctor.getCommunityName();
            row[5] = doctor.getCityName();

            model.addRow(row); // adds row to model

        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTab_manage = new javax.swing.JTabbedPane();
        jtab_add = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        lblnameval = new javax.swing.JLabel();
        lblageval = new javax.swing.JLabel();
        txtage = new javax.swing.JTextField();
        lblage = new javax.swing.JLabel();
        lblHA = new javax.swing.JLabel();
        txtHA = new javax.swing.JTextField();
        lblHAval = new javax.swing.JLabel();
        lblcomm = new javax.swing.JLabel();
        lblcommval = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        txtcity = new javax.swing.JTextField();
        lblcityval = new javax.swing.JLabel();
        lblUN = new javax.swing.JLabel();
        txtun = new javax.swing.JTextField();
        lblunval = new javax.swing.JLabel();
        lblpwd = new javax.swing.JLabel();
        txtpwd = new javax.swing.JTextField();
        lblpwdval = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        lblgender = new javax.swing.JLabel();
        txtgender = new javax.swing.JComboBox<>();
        txtcomm = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();
        btnEncounter = new javax.swing.JButton();
        btn_Save = new javax.swing.JButton();
        lbl_comm = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        lbl_city = new javax.swing.JLabel();
        lbl_name = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        txt_age = new javax.swing.JTextField();
        txt_ha = new javax.swing.JTextField();
        txt_city = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lbl_age = new javax.swing.JLabel();
        lbl_HA = new javax.swing.JLabel();
        lbl_un = new javax.swing.JLabel();
        lbl_pwd = new javax.swing.JLabel();
        txt_un = new javax.swing.JTextField();
        txt_pwd = new javax.swing.JTextField();
        lbl_gender = new javax.swing.JLabel();
        txt_gender = new javax.swing.JComboBox<>();
        txtSearchID = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        txtSearchName = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        btnUpdate1 = new javax.swing.JButton();
        txt_comm = new javax.swing.JComboBox<>();

        jTab_manage.setBackground(new java.awt.Color(255, 153, 153));
        jTab_manage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTab_manageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTab_manageMouseEntered(evt);
            }
        });

        jtab_add.setBackground(new java.awt.Color(255, 204, 204));
        jtab_add.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 51, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Create New Patient");
        jtab_add.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 68, 980, -1));

        lblName.setText("Name:");
        jtab_add.add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(258, 172, 88, 23));

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });
        txtname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnameKeyReleased(evt);
            }
        });
        jtab_add.add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 165, 238, -1));

        lblId.setText(" ");
        lblId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblIdKeyReleased(evt);
            }
        });
        jtab_add.add(lblId, new org.netbeans.lib.awtextra.AbsoluteConstraints(631, 26, 238, -1));

        lblnameval.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        lblnameval.setForeground(new java.awt.Color(255, 51, 51));
        lblnameval.setText(" ");
        jtab_add.add(lblnameval, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 171, 420, 20));

        lblageval.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        lblageval.setForeground(new java.awt.Color(255, 51, 51));
        lblageval.setText(" ");
        lblageval.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblagevalKeyReleased(evt);
            }
        });
        jtab_add.add(lblageval, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 261, 430, 30));

        txtage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtageActionPerformed(evt);
            }
        });
        txtage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtageKeyReleased(evt);
            }
        });
        jtab_add.add(txtage, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 261, 238, -1));

        lblage.setText("Age:");
        jtab_add.add(lblage, new org.netbeans.lib.awtextra.AbsoluteConstraints(258, 261, 88, 30));

        lblHA.setText("House Address:");
        jtab_add.add(lblHA, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 312, -1, -1));

        txtHA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHAActionPerformed(evt);
            }
        });
        txtHA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHAKeyReleased(evt);
            }
        });
        jtab_add.add(txtHA, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 309, 238, -1));

        lblHAval.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        lblHAval.setForeground(new java.awt.Color(255, 51, 51));
        lblHAval.setText(" ");
        jtab_add.add(lblHAval, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 309, 438, 30));

        lblcomm.setText("Community:");
        jtab_add.add(lblcomm, new org.netbeans.lib.awtextra.AbsoluteConstraints(253, 360, 110, 30));

        lblcommval.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        lblcommval.setForeground(new java.awt.Color(255, 51, 51));
        lblcommval.setText(" ");
        jtab_add.add(lblcommval, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 358, 438, 30));

        lblCity.setText("City:");
        jtab_add.add(lblCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(258, 406, 88, 31));

        txtcity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcityActionPerformed(evt);
            }
        });
        txtcity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcityKeyReleased(evt);
            }
        });
        jtab_add.add(txtcity, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 407, 238, -1));

        lblcityval.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        lblcityval.setForeground(new java.awt.Color(255, 51, 51));
        lblcityval.setText(" ");
        jtab_add.add(lblcityval, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 407, 430, 30));

        lblUN.setText("User Name:");
        jtab_add.add(lblUN, new org.netbeans.lib.awtextra.AbsoluteConstraints(258, 456, 110, 30));

        txtun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtunActionPerformed(evt);
            }
        });
        txtun.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtunKeyReleased(evt);
            }
        });
        jtab_add.add(txtun, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 456, 238, -1));

        lblunval.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        lblunval.setForeground(new java.awt.Color(255, 51, 51));
        lblunval.setText(" ");
        jtab_add.add(lblunval, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 456, 380, 30));

        lblpwd.setText("Password:");
        jtab_add.add(lblpwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(258, 504, 88, 31));

        txtpwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpwdActionPerformed(evt);
            }
        });
        txtpwd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpwdKeyReleased(evt);
            }
        });
        jtab_add.add(txtpwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 505, 238, -1));

        lblpwdval.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        lblpwdval.setForeground(new java.awt.Color(255, 51, 51));
        jtab_add.add(lblpwdval, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 503, 430, 30));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jtab_add.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(485, 595, 110, -1));

        lblgender.setText("Gender");
        jtab_add.add(lblgender, new org.netbeans.lib.awtextra.AbsoluteConstraints(258, 216, 75, -1));

        txtgender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        txtgender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgenderActionPerformed(evt);
            }
        });
        jtab_add.add(txtgender, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 213, 238, -1));

        txtcomm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brookline", "Fenway", "Boylston", "Mission Hill" }));
        txtcomm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcommActionPerformed(evt);
            }
        });
        txtcomm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcommKeyReleased(evt);
            }
        });
        jtab_add.add(txtcomm, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 360, 230, -1));

        jTab_manage.addTab("Add New Patient", jtab_add);

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Name", "Age", "Gender", "Community", "City"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(displayTable);

        btnEncounter.setText("Manage Encounter");
        btnEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterActionPerformed(evt);
            }
        });

        btn_Save.setText("Save");
        btn_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SaveActionPerformed(evt);
            }
        });

        lbl_comm.setText("Community:");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lbl_city.setText("City:");

        lbl_name.setText("Name:");

        txt_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nameActionPerformed(evt);
            }
        });

        txt_ha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_haActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Manage Patient Details");

        lbl_age.setText("Age:");

        lbl_HA.setText("House Address:");

        lbl_un.setText("User Name:");

        lbl_pwd.setText("Password:");

        lbl_gender.setText("Gender:");

        txt_gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        txt_gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_genderActionPerformed(evt);
            }
        });

        txtSearchID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchIDActionPerformed(evt);
            }
        });
        txtSearchID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchIDKeyReleased(evt);
            }
        });

        jTextField1.setText("Search by Patient ID");

        txtSearchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchNameActionPerformed(evt);
            }
        });
        txtSearchName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchNameKeyReleased(evt);
            }
        });

        jTextField2.setText("Search by Patient Attributes");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        btnUpdate1.setText("View & Update");
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });

        txt_comm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brookline", "Fenway", "Boylston", "Mission Hill" }));
        txt_comm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_commActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1062, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(txtSearchID, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180)
                .addComponent(txtSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1048, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(btnEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(571, 571, 571)
                .addComponent(btnUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnDelete))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(lbl_name, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(lbl_age, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(lbl_HA, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_ha, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(lbl_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(txt_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(519, 519, 519)
                .addComponent(btn_Save, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbl_comm, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_comm, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbl_city, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(txt_city, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(75, 75, 75)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbl_pwd, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(txt_pwd, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(lbl_un, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(txt_un, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearchID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(btnEncounter))
                    .addComponent(btnUpdate1)
                    .addComponent(btnDelete))
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lbl_name))
                    .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lbl_age))
                    .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lbl_HA))
                    .addComponent(txt_ha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(lbl_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txt_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_comm)
                            .addComponent(txt_comm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lbl_un)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(txt_un, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_pwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_city)
                            .addComponent(lbl_pwd))))
                .addGap(40, 40, 40)
                .addComponent(btn_Save))
        );

        jTab_manage.addTab("Manage Patients", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTab_manage))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTab_manage)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void txtnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyReleased
        // TODO add your handling code here:
        String PatterN = "^[a-zA-Z '/:]+$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(txtname.getText());
        if(!patternmatch.matches())
        {
            lblnameval.setText("Wrong Input, Please Enter Valid Name.");
        }
        else
        {
            lblnameval.setText("");
        }
    }//GEN-LAST:event_txtnameKeyReleased

    private void lblIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblIdKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_lblIdKeyReleased

    private void lblagevalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblagevalKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_lblagevalKeyReleased

    private void txtageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtageActionPerformed

    private void txtageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtageKeyReleased
        // TODO add your handling code here:
        String PatterN = "^[0-9 +()-]{1,3}$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(txtage.getText());
        if(!patternmatch.matches() || Integer.parseInt(txtage.getText()) > 120)
        {
            lblageval.setText("Wrong Input, Please Enter Valid Age.");
//            JOptionPane.showMessageDialog(this, "Please Enter Valid Age!");
            txtage.setText("");
            error_flag = 1;

        }
        else
        {
            lblageval.setText("");
            error_flag = 0;
        }
    }//GEN-LAST:event_txtageKeyReleased

    private void txtHAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHAActionPerformed

    private void txtHAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHAKeyReleased
        // TODO add your handling code here:
        String PatterN = "^[a-zA-Z0-9 \\d@$!-_ %*#?&'/:]+$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(txtHA.getText());
        if(!patternmatch.matches())
        {
            lblHAval.setText("Wrong Input, Please Try Again.");
        }
        else
        {
            lblHAval.setText("");
        }
    }//GEN-LAST:event_txtHAKeyReleased

    private void txtcityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcityActionPerformed

    private void txtcityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcityKeyReleased
        // TODO add your handling code here:
        String PatterN = "^[a-zA-Z0-9 '/:]+$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(txtcity.getText());
        if(!patternmatch.matches())
        {
            lblcityval.setText("Wrong Input, Please Try Again.");
        }
        else
        {
            lblcityval.setText("");
        }
    }//GEN-LAST:event_txtcityKeyReleased

    private void txtunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtunActionPerformed

    private void txtunKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtunKeyReleased
        // TODO add your handling code here:
        String PatterN = "^[a-zA-Z0-9 '/:]+$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(txtun.getText());
        if(!patternmatch.matches() )
        {
            lblunval.setText("Wrong Input, Please Try Again.");
            error_flag = 1;
        }
        else
        {
            lblunval.setText("");
            error_flag = 0;
        }
        
//        Checking the username exists in the patientdirectory.

        boolean isExist = patientlist.isUserNameExist(txtun.getText());

        if(isExist){
            lblunval.setText("UserName Already Taken.");
        }
        else{
            lblunval.setText("");
        }
    }//GEN-LAST:event_txtunKeyReleased

    private void txtpwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpwdActionPerformed

    private void txtpwdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpwdKeyReleased
        // TODO add your handling code here:
        String PatterN = "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$";
        Pattern pattern = Pattern.compile(PatterN);
        Matcher patternmatch = pattern.matcher(txtpwd.getText());
        if(!patternmatch.matches())
        {
            lblpwdval.setText("Min 8 char, valid A-Z / 0-9 / @$!%*#?&");
            error_flag =1;
        }
        else
        {
            lblpwdval.setText("");
            error_flag = 0;
        }
    }//GEN-LAST:event_txtpwdKeyReleased

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String name = txtname.getText();
        String gender = txtgender.getSelectedItem().toString();
        int age = Integer.parseInt(txtage.getText());
        String houseaddress = txtHA.getText();
        String community = txtcomm.getSelectedItem().toString();
        String city = txtcity.getText();
        String username = txtun.getText();
        String pwd = txtpwd.getText();

        if(error_flag == 1 || lblnameval.getText() != "" || lblHAval.getText()!="" || lblcommval.getText() != "" || lblcityval.getText() != "" || lblunval.getText() != "" || lblpwdval.getText() != ""){
            JOptionPane.showMessageDialog(this, "Failed!, Please fill Information Correctly");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            Patient doc = patientlist.addNewEmployee();
            doc.setPersonName(name);
            doc.setPersonGender(gender);
            doc.setPersonAge(age);
            doc.setHouseAddress(houseaddress);
            doc.setCommunityName(community);
            doc.setCityName(city);
            doc.setUsername(username);
            doc.setPassword(pwd);
            JOptionPane.showMessageDialog(this, "Patient created successfully!");

            txtname.setText("");
            txtgender.setSelectedIndex(0);
            txtage.setText("");
            txtHA.setText("");
            txtcomm.setSelectedIndex(0);
            txtcity.setText("");
            txtun.setText("");
            txtpwd.setText("");
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtgenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtgenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtgenderActionPerformed

    private void btnEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex;
        
        selectedRowIndex = displayTable.getSelectedRow();

        if (selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
        int patient_id = (int) displayTable.getValueAt(selectedRowIndex, 0);
        Patient patient = patientlist.searchPatient(patient_id);
        
        ArrayList<Encounter> patientencounterhistory = encounterhistory.searchPatient(patient_id);
        
//        JOptionPane.showMessageDialog(null, patientencounterhistory.isEmpty());
        manageEncounterjPanel encounterPanel = new manageEncounterjPanel(WorkArea, patient, encounterhistory, patientencounterhistory);
        
//        PersonPanel panel = new PersonPanel();
//        SplitPane.setRightComponent(encounterPanel);
//        EncounterJPanel encounterPanel = new EncounterJPanel(newEncounterPersonDirectory, person, patientDirectory, encounterHistory, false);
        WorkArea.add("manageEncounterjPanel", encounterPanel);
        CardLayout cardlayout = (CardLayout) WorkArea.getLayout();
        cardlayout.next(WorkArea);
//        

    }//GEN-LAST:event_btnEncounterActionPerformed

    private void btn_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SaveActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = displayTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Record to update the details");
            //            btn_Save.setEnabled(false);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
        Patient selectedEntry = patientlist.getPatientlist().get(selectedRowIndex);

        //        Doctor selectedEntry = (Doctor) model.getValueAt(selectedRowIndex, 0);
        //        System.out.println("name"+txtEmployeeName.getText());

        if(txt_name.getText().isEmpty() || txt_age.getText().isEmpty() || txt_ha.getText().isEmpty() || txt_comm.getSelectedItem().toString().isEmpty() || txt_city.getText().isEmpty() || txt_un.getText().isEmpty() || txt_pwd.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please fill Information Correctly");
        }
        else{
            selectedEntry.setPersonName(txt_name.getText());
            selectedEntry.setPersonAge(Integer.parseInt(txt_age.getText()));
            selectedEntry.setPersonGender(txt_gender.getSelectedItem().toString());
            selectedEntry.setHouseAddress((txt_ha.getText()));
            selectedEntry.setCommunityName(txt_comm.getSelectedItem().toString());
            selectedEntry.setCityName(txt_city.getText());
            selectedEntry.setUsername(txt_un.getText());
            selectedEntry.setPassword(txt_pwd.getText());

            populateDataToTable();

            txt_name.setText("");
            txt_age.setText("");
            txt_gender.setSelectedIndex(-1);
            txt_ha.setText("");
            txt_comm.setSelectedIndex(-1);
            txt_city.setText("");
            txt_un.setText("");
            txt_pwd.setText("");
        }
    }//GEN-LAST:event_btn_SaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = displayTable.getSelectedRow();  // gives index of selected rows
        if(selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this, "Please select a Doctor profile");
            return;
            // int selectedRowIndex = displayTable.getSelectedRow();  // gives index of selected rows
        }
        DefaultTableModel model = (DefaultTableModel)displayTable.getModel();
        Patient selectedEntry = patientlist.getPatientlist().get(selectedRowIndex);

        //        Doctor selectedEntry = (Doctor) model.getValueAt(selectedRowIndex, 0);  // to get any value cells from table through row and column
        patientlist.deleteProfile(selectedEntry);
        JOptionPane.showMessageDialog(this, "Selected Record Deleted");
        populateDataToTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txt_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nameActionPerformed

    private void txt_haActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_haActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_haActionPerformed

    private void txt_genderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_genderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_genderActionPerformed

    private void jTab_manageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTab_manageMouseClicked
        // TODO add your handling code here:
        populateDataToTable();
        txt_name.setText("");
        txt_age.setText("");
        txt_gender.setSelectedIndex(-1);
        txt_ha.setText("");
        txt_comm.setSelectedIndex(-1);
        txt_city.setText("");
        txt_un.setText("");
        txt_pwd.setText("");
    }//GEN-LAST:event_jTab_manageMouseClicked

    private void jTab_manageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTab_manageMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTab_manageMouseEntered

    private void txtSearchIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchIDActionPerformed

    private void txtSearchIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchIDKeyReleased
        // TODO add your handling code here:

        if(!(txtSearchID.getText().isEmpty()))
        {
            int search = Integer.parseInt(txtSearchID.getText()); // reads the search text as lower case
            DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            displayTable.setRowSorter(tr);
            String regex = String.format("^%s$", search);
            tr.setRowFilter(RowFilter.regexFilter(regex));
        }
        else{
            String search = ""; // reads the search text as lower case
            DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            displayTable.setRowSorter(tr);
            //            String regex = String.format("^%s$", search);
            tr.setRowFilter(RowFilter.regexFilter(search));
        }
    }//GEN-LAST:event_txtSearchIDKeyReleased

    private void txtSearchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchNameActionPerformed

    private void txtSearchNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchNameKeyReleased
        // TODO add your handling code here:

        if(!(txtSearchName.getText().isEmpty()))
        {
            String search = (txtSearchName.getText()); // reads the search text as lower case
            DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            displayTable.setRowSorter(tr);
            String regex = String.format("(?i)(^%s$)", search);
            tr.setRowFilter(RowFilter.regexFilter(regex));
        }
        else{
            String search = ""; // reads the search text as lower case
            DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            displayTable.setRowSorter(tr);
            //            String regex = String.format("^%s$", search);
            tr.setRowFilter(RowFilter.regexFilter(search));
        }
    }//GEN-LAST:event_txtSearchNameKeyReleased

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = displayTable.getSelectedRow();  // gives index of selected rows
        if(selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this, "Select a record to view");
            btn_Save.setEnabled(false);
//            return;
        }
        else{
            btn_Save.setEnabled(true);
        }
        
        DefaultTableModel model = (DefaultTableModel)displayTable.getModel();
        
        //        Doctor selectedEntry = (Doctor) model.getValueAt(selectedRowIndex, 0);  // to get any value cells from table through row and column

        Patient selectedEntry = patientlist.getPatientlist().get(selectedRowIndex);
        txt_name.setText(selectedEntry.getPersonName());
        txt_age.setText(String.valueOf(selectedEntry.getPersonAge()));
        txt_gender.setSelectedItem(selectedEntry.getPersonGender());
        txt_ha.setText(selectedEntry.getHouseAddress());
        txt_comm.setSelectedItem(selectedEntry.getCommunityName());
        txt_city.setText(selectedEntry.getCityName());
        txt_un.setText(String.valueOf(selectedEntry.getUsername()));
        txt_pwd.setText(selectedEntry.getPassword());
    }//GEN-LAST:event_btnUpdate1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void txtcommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcommActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcommActionPerformed

    private void txt_commActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_commActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_commActionPerformed

    private void txtcommKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcommKeyReleased
        // TODO add your handling code here:
        if(txtcomm.getSelectedItem().equals(null)){
            lblcommval.setText("Please select a community");
        }
        else{
            lblcommval.setText("");
        }
    }//GEN-LAST:event_txtcommKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEncounter;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.JButton btn_Save;
    private javax.swing.JTable displayTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTab_manage;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel jtab_add;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblHA;
    private javax.swing.JLabel lblHAval;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblUN;
    private javax.swing.JLabel lbl_HA;
    private javax.swing.JLabel lbl_age;
    private javax.swing.JLabel lbl_city;
    private javax.swing.JLabel lbl_comm;
    private javax.swing.JLabel lbl_gender;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_pwd;
    private javax.swing.JLabel lbl_un;
    private javax.swing.JLabel lblage;
    private javax.swing.JLabel lblageval;
    private javax.swing.JLabel lblcityval;
    private javax.swing.JLabel lblcomm;
    private javax.swing.JLabel lblcommval;
    private javax.swing.JLabel lblgender;
    private javax.swing.JLabel lblnameval;
    private javax.swing.JLabel lblpwd;
    private javax.swing.JLabel lblpwdval;
    private javax.swing.JLabel lblunval;
    private javax.swing.JTextField txtHA;
    private javax.swing.JTextField txtSearchID;
    private javax.swing.JTextField txtSearchName;
    private javax.swing.JTextField txt_age;
    private javax.swing.JTextField txt_city;
    private javax.swing.JComboBox<String> txt_comm;
    private javax.swing.JComboBox<String> txt_gender;
    private javax.swing.JTextField txt_ha;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_pwd;
    private javax.swing.JTextField txt_un;
    private javax.swing.JTextField txtage;
    private javax.swing.JTextField txtcity;
    private javax.swing.JComboBox<String> txtcomm;
    private javax.swing.JComboBox<String> txtgender;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtpwd;
    private javax.swing.JTextField txtun;
    // End of variables declaration//GEN-END:variables
}
